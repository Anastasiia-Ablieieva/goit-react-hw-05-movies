{"version":3,"file":"static/js/186.a959a682.chunk.js","mappings":"yNAyCA,UArCgB,WACd,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAeA,OAbAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,gHAESC,EAAAA,EAAAA,IAAkBP,GAF3B,gBAETQ,EAFS,EAETA,QACRJ,EAAWI,GAHM,gDAKjBC,QAAQC,IAAR,MALiB,yDAAH,qDASlBJ,GACD,GAAE,CAACN,KAGF,iCACE,oCACCG,EAAQQ,QACP,eAAIC,UAAU,oBAAd,SACGT,EAAQU,KAAI,SAAAC,GAAM,OACjB,gBAAIF,UAAU,cAAd,WACE,qCAAaE,EAAOC,OAApB,QACA,6BAAKD,EAAOE,QAAZ,SAF+BF,EAAOG,GADvB,OAQrB,2EAMP,C","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../../services/api';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]); \n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      try {\n        const { results } = await fetchMovieReviews(movieId);\n        setReviews(results);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n\n    fetchReviews();\n  }, [movieId]);\n\n  return (\n    <>\n      <h2>Reviews</h2>\n      {reviews.length ? (\n        <ul className=\"reviews-container\">\n          {reviews.map(review => (\n            <li className=\"review-card\" key={review.id}>\n              <p> Author: {review.author} </p>\n              <p> {review.content} </p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>\n          We don't have any reviews for this movie yet.\n        </p>\n      )}\n    </>\n  );\n};\nexport default Reviews;"],"names":["movieId","useParams","useState","reviews","setReviews","useEffect","fetchReviews","fetchMovieReviews","results","console","log","length","className","map","review","author","content","id"],"sourceRoot":""}